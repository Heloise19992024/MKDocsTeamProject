{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shader Snippets Documentation","text":"<p>Welcome to the Shader Snippets Documentation! This site collects procedural shaders that create visual effects, like patterns or colors, on a full-screen rectangle (called a quad). Our shaders are written in GLSL (used in Shadertoy and WebGL) and HLSL (used in Unreal Engine and Unity).</p>"},{"location":"#whats-this-about","title":"What\u2019s This About?","text":"<p>Our goal is to make it easy to understand and reuse shaders that draw cool visuals without 3D objects in the scene. For example: - A shader might fill the screen with a gradient or checkerboard pattern. - In Unreal Engine, we use Post Process Materials to apply these shaders to the entire screen. - In Shadertoy, shaders automatically draw on a full-screen quad.</p>"},{"location":"#whats-next","title":"What\u2019s Next?","text":"<ul> <li>Browse shaders in the Shaders section, organized by type (e.g., patterns, effects).</li> <li>Learn how to set up shaders in Unreal Engine or other platforms.</li> <li>Watch video demos to see shaders in action.</li> </ul>"},{"location":"#tags","title":"Tags","text":"<ul> <li>shaders, glsl, hlsl, shadertoy, unreal-engine, procedural</li> </ul>"},{"location":"demoShader/","title":"Demo Shader: Gradient","text":""},{"location":"demoShader/#glsl-shadertoy","title":"GLSL (Shadertoy)","text":""},{"location":"demoShader/#code","title":"Code","text":"<pre><code>// glsl code\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = vec4(uv.x, uv.y, 0.0, 1.0);\n} 0\n</code></pre>"}]}